#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
#    type: string
default_privs = interact, shout, fly

#    Defines the maximal player transfer distance in blocks (0 = unlimited).
#    type: int min: 0 max: 65535
player_transfer_distance = 8

#    From how far clients know about objects, stated in mapblocks (16 nodes).
#
#    Setting this larger than active_block_range will also cause the server
#    to maintain active objects up to this distance in the direction the
#    player is looking. (This can avoid mobs suddenly disappearing from view)
#    type: int min: 1 max: 65535
active_object_send_range_blocks = 8

#    The radius of the volume of blocks around every player that is subject to the
#    active block stuff, stated in mapblocks (16 nodes).
#    In active blocks objects are loaded and ABMs run.
#    This is also the minimum range in which active objects (mobs) are maintained.
#    This should be configured together with active_object_send_range_blocks.
#    type: int min: 1 max: 65535
active_block_range = 8


#    Default maximum number of forceloaded mapblocks.
#    Set this to -1 to disable the limit.
#    type: int min: -1
max_forceloaded_blocks = -1

#    From how far blocks are generated for clients, stated in mapblocks (16 nodes).
#    type: int min: 1 max: 32767
max_block_generate_distance = 16


#    Name of map generator to be used when creating a new world.
#    Creating a world in the main menu will override this.
#    Current mapgens in a highly unstable state:
#    -    The optional floatlands of v7 (disabled by default).
#    type: enum values: v7, valleys, carpathian, v5, flat, fractal, singlenode, v6
mg_name = v7


## Mapgen V7

#    Map generation attributes specific to Mapgen v7.
#    'ridges': Rivers.
#    'floatlands': Floating land masses in the atmosphere.
#    'caverns': Giant caves deep underground.
#    type: flags possible values: mountains, ridges, floatlands, caverns
mgv7_spflags = ridges,nofloatlands

#    Y of mountain density gradient zero level. Used to shift mountains vertically.
#    type: int min: -31000 max: 31000
# mgv7_mount_zero_level = 0

#    Lower Y limit of floatlands.
#    type: int min: -31000 max: 31000
# mgv7_floatland_ymin = 1024

#    Upper Y limit of floatlands.
#    type: int min: -31000 max: 31000
# mgv7_floatland_ymax = 4096

#    Y-distance over which floatlands taper from full density to nothing.
#    Tapering starts at this distance from the Y limit.
#    For a solid floatland layer, this controls the height of hills/mountains.
#    Must be less than or equal to half the distance between the Y limits.
#    type: int min: 0 max: 32767
# mgv7_floatland_taper = 256

#    Exponent of the floatland tapering. Alters the tapering behavior.
#    Value = 1.0 creates a uniform, linear tapering.
#    Values > 1.0 create a smooth tapering suitable for the default separated
#    floatlands.
#    Values < 1.0 (for example 0.25) create a more defined surface level with
#    flatter lowlands, suitable for a solid floatland layer.
#    type: float
# mgv7_float_taper_exp = 2.0

#    Adjusts the density of the floatland layer.
#    Increase value to increase density. Can be positive or negative.
#    Value = 0.0: 50% of volume is floatland.
#    Value = 2.0 (can be higher depending on 'mgv7_np_floatland', always test
#    to be sure) creates a solid floatland layer.
#    type: float
# mgv7_floatland_density = -0.6

#    Surface level of optional water placed on a solid floatland layer.
#    Water is disabled by default and will only be placed if this value is set
#    to above 'mgv7_floatland_ymax' - 'mgv7_floatland_taper' (the start of the
#    upper tapering).
#    ***WARNING, POTENTIAL DANGER TO WORLDS AND SERVER PERFORMANCE***:
#    When enabling water placement, floatlands must be configured and tested
#    to be a solid layer by setting 'mgv7_floatland_density' to 2.0 (or other
#    required value depending on 'mgv7_np_floatland'), to avoid
#    server-intensive extreme water flow and to avoid vast flooding of the
#    world surface below.
#    type: int min: -31000 max: 31000
# mgv7_floatland_ywater = -31000

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgv7_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int min: -31000 max: 31000
# mgv7_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgv7_large_cave_flooded = 0.5

#    Y-level of cavern upper limit.
#    type: int min: -31000 max: 31000
# mgv7_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int min: 0 max: 32767
# mgv7_cavern_taper = 256

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgv7_cavern_threshold = 0.7

#    Lower Y limit of dungeons.
#    type: int min: -31000 max: 31000
# mgv7_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int min: -31000 max: 31000
# mgv7_dungeon_ymax = 31000

### Noises

#    Y-level of higher terrain that creates cliffs.
#    type: noise_params_2d
mgv7_np_terrain_base = {
   offset      = 4,
   scale       = 10,   
   spread      = (600, 600, 600),
   seed        = 82341,
   octaves     = 5,
   persistence = 0.6,
   lacunarity  = 2.0,
   flags       = eased
}

#    Y-level of lower terrain and seabed.
#    type: noise_params_2d
mgv7_np_terrain_alt = {
   offset      = 4,
   scale       = 8,
   spread      = (600, 600, 600),
   seed        = 5934,
   octaves     = 5,
   persistence = 0.6,
   lacunarity  = 2.0,
   flags       = eased
}

#    Varies roughness of terrain.
#    Defines the 'persistence' value for terrain_base and terrain_alt noises.
#    type: noise_params_2d
# mgv7_np_terrain_persist = {
#    offset      = 0.6,
#    scale       = 0.1,
#    spread      = (2000, 2000, 2000),
#    seed        = 539,
#    octaves     = 3,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines distribution of higher terrain and steepness of cliffs.
#    type: noise_params_2d
mgv7_np_height_select = {
   offset      = -8,
   scale       = 2,     
   spread      = (1000, 1000, 1000),
   seed        = 4213,
   octaves     = 6,
   persistence = 0.7,
   lacunarity  = 2.0,
   flags       = eased
}


#    Variation of biome filler depth.
#    type: noise_params_2d
# mgv7_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of maximum mountain height (in nodes).
#    type: noise_params_2d
mgv7_np_mount_height = {
   offset      = 100,  
   scale       = 1,     
   spread      = (2000, 2000, 2000),  
   seed        = 72449,
   octaves     = 2,
   persistence = 0.6,
   lacunarity  = 2.0,
   flags       = eased
}

#    Defines large-scale river channel structure.
#    type: noise_params_2d
# mgv7_np_ridge_uwater = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (1000, 1000, 1000),
#    seed        = 85039,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise defining mountain structure and height.
#    Also defines structure of floatland mountain terrain.
#    type: noise_params_3d
# mgv7_np_mountain = {
#    offset      = -0.6,
#    scale       = 1,
#    spread      = (250, 350, 250),
#    seed        = 5333,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       =
# }

#    3D noise defining structure of river canyon walls.
#    type: noise_params_3d
# mgv7_np_ridge = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (100, 100, 100),
#    seed        = 6467,
#    octaves     = 4,
#    persistence = 0.75,
#    lacunarity  = 2.0,
#    flags       =
# }

#    3D noise defining structure of floatlands.
#    If altered from the default, the noise 'scale' (0.7 by default) may need
#    to be adjusted, as floatland tapering functions best when this noise has
#    a value range of approximately -2.0 to 2.0.
#    type: noise_params_3d
# mgv7_np_floatland = {
#    offset      = 0,
#    scale       = 0.7,
#    spread      = (384, 96, 384),
#    seed        = 1009,
#    octaves     = 4,
#    persistence = 0.75,
#    lacunarity  = 1.618,
#    flags       =
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgv7_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (384, 128, 384),
#    seed        = 723,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       =
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       =
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       =
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgv7_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       =
# }

# Inverted chance factor when stomping. The lesser, the more likely the node will be
# updated when walking on it. 0.1 means 10 times more likely.
naturalslopeslib_update_shape_stomp_factor = 0.75

# Inverted chance factor on digging/placing. The lesser, the more likely the
# nodes will be updated when the neighbour nodes change. 0.1 means 10 times
# more likely.
naturalslopeslib_update_shape_dig_place_factor = 0.02


# Rendering mode for slopes. It only affects the visuals. The collision boxes are always matching the cubic style.
# Anything different from Cubic will shows sharp discontinuities between slopes and non-sloped nodes, and will mislead players because the bottom part of a slope is in fact half a node higher than it looks like.
# - Cubic (default) divides blocs in 8 and give stair-like look
# - Smooth uses smooth triangles.
# - Rough shows more accidented slopes.
naturalslopeslib_rendering_mode = Cubic

# Sets the height (Y) at which the bedrock layer will be created.
bedrock2_y = -17